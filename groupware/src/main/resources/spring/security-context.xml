<?xml version="1.0" encoding="UTF-8"?>  
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="com.sp"/>
	
    <!-- 권한이 없는 페이지를 접근할 경우 접근 불가 메시지 출력  -->
	<http auto-config="true">
		<!-- spring 4.x때 추가된 옵션으로 ssl을 사용하지 않을 경우 csrf는 disalbed=true로 설정. -->
		<csrf disabled="true"/>
		
		<!-- 모든 사용자 접근 허용 -->
		
		<intercept-url pattern="/index.jsp" access="permitAll"/>
		<intercept-url pattern="/main" access="permitAll"/>
		<intercept-url pattern="/member/login" access="permitAll"/>
		<intercept-url pattern="/member/member" access="permitAll"/>
		<intercept-url pattern="/member/userIdCheck" access="permitAll"/>
		<intercept-url pattern="/member/logout" access="permitAll"/>
		<intercept-url pattern="/resource/**" access="permitAll"/>
		
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		
		<intercept-url pattern="/**" access="hasAnyRole('ROLE_USER')"/>
		
		<form-login login-page="/member/login" 
					login-processing-url="/member/login_check"
					username-parameter="memberNum"
					password-parameter="pwd"
					authentication-failure-url="/member/login?login_error"
					authentication-success-handler-ref="authenticationSuccessHandler"
					default-target-url="/main"
					always-use-default-target="true"
		/>
		
		<logout logout-url="/member/logout"
				invalidate-session="true"
				logout-success-url="/member/login"
		/>
		
		<!-- 권한 없는 경우 -->
		<access-denied-handler error-page="/member/noAuthorized"/>
		
		<!-- 한 계정에 여러 명이 접속하는 경우 -->
		<session-management>
			<concurrency-control max-sessions="10" expired-url="/member/expired"/>
		</session-management>
		
	</http>
  

    <beans:bean id="authenticationSuccessHandler" class="com.sp.member.MyAuthenticationSuccessHandler">
    	<beans:property name="defaultTargetUrl" value="/main"/>
    	<beans:property name="alwaysUseDefaultTargetUrl" value="true"/>
    </beans:bean>

    
    <jdbc-user-service data-source-ref="dataSource" id="userService"
    	users-by-username-query="SELECT memberNum username, pwd password,
    							status enabled FROM member WHERE memberNum=?"
    	authorities-by-username-query="SELECT memberNum username, authority
    							FROM memberAuthority WHERE memberNum=?"
    />
    <!-- bcrypt : 패스워드 암호화에 특화된 password hasing function -->
    <beans:bean id="bcryptPassword"
    class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
    
    
	<authentication-manager>
		<authentication-provider user-service-ref="userService">
			<password-encoder ref="bcryptPassword"></password-encoder>
		</authentication-provider>
	</authentication-manager>

</beans:beans>
