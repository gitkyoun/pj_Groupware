<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="res1">
<!-- 자원 그룹 -->
<select id="listResourceGroup" resultType="com.sp.resource.Resource">
	SELECT groupNum, groupName FROM resourceGroup
</select>

<!-- 자원 상세 목록 -->
<select id="listResourceList" resultType="com.sp.resource.ResourceJSON">
	SELECT resourceNum id, rl.groupNum, groupName, resourceName title,
		color eventColor, occupancy
		FROM resourceList rl
		JOIN resourceGroup rg ON rl.groupNum = rg.groupNum
		ORDER BY rl.groupNum, resourceNum
</select>

<select id="listResourceList2" resultType="com.sp.resource.Resource">
	SELECT resourceNum, resourceName, occupancy
		FROM resourceList
		WHERE groupNum = #{groupNum}
		ORDER By resourceNum
</select>

<select id="readResourceList" parameterType="Integer" resultType="com.sp.resource.Resource">
	SELECT resourceNum, groupNum, resourceName, color, occupancy 
	FROM resourceList
	WHERE resourceNum = #{resourceNum}
</select>

<!-- 자원 예약 -->
<insert id="insertReserve">
	INSERT INTO reservation(reserveNum, memberNum, name, resourceNum, resourceName, startDay, endDay,
	startTime, endTime, inwon, title, content, alarm, alarmTime, alarmTitle, alarmContent, toMember) 
	VALUES(reserve_seq.NEXTVAL, #{memberNum}, #{name}, #{resourceNum}, #{resourceName},
	#{startDay}, #{endDay}, #{startTime, jdbcType=VARCHAR}, #{endTime, jdbcType=VARCHAR},
	#{inwon}, #{title}, #{content}, #{alarm}, #{alarmTime, jdbcType=VARCHAR},
	#{alarmTitle, jdbcType=VARCHAR}, #{alarmContent, jdbcType=VARCHAR}, #{toMember, jdbcType=VARCHAR})
</insert>

<select id="listReserve" parameterType="map" resultType="com.sp.resource.ResourceJSON">
	SELECT reserveNum id, groupName, rs.resourceNum resourceId, title, 
		NVL2(startTime, startDay||'T'||startTime, startDay) "start",
		NVL2(endTime, endDay||'T'||endTime, endDay) "end",
			startDay, startTime, endDay, endTime, 
			rs.memberNum, rs.name, occupancy, rl.resourceName, rl.groupNum, inwon
        FROM reservation rs
        JOIN resourceList rl ON rs.resourceNum = rl.resourceNum
        JOIN resourceGroup rg ON rl.groupNum = rg.groupNum
        JOIN member m ON rs.memberNum = m.memberNum
        WHERE TO_DATE(startDay, 'YYYY-MM-DD') &gt;= #{start}
           AND TO_DATE(endDay, 'YYYY-MM-DD') &lt;= #{end}
        ORDER BY groupNum, resourceId, reserveNum
</select>

<delete id="deleteReserve" parameterType="map">
	DELETE FROM reservation  
		WHERE reserveNum = #{reserveNum}
		<if test="memberNum != 'admin'">
			AND memberNum = #{memberNum}
		</if>
</delete>

</mapper>