<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="res1">
<!-- 자원 그룹 -->
<insert id="insertResourceGroup" parameterType="com.sp.resource.Resource">
	INSERT INTO resourceGroup(groupNum, groupName) VALUES(resourceGroup_seq.NEXTVAL, #{groupName})
</insert>

<update id="updateResourceGroup" parameterType="com.sp.resource.Resource">
	UPDATE resourceGroup SET groupName = #{groupName} WHERE groupNum = #{groupNum}
</update>

<delete id="deleteResourceGroup" parameterType="Integer">
	DELETE FROM resourceGroup WHERE groupNum = #{groupNum}
</delete>

<select id="listResourceGroup" resultType="com.sp.resource.Resource">
	SELECT groupNum, groupName FROM resourceGroup
</select>

<!-- 자원 상세 목록 -->
<insert id="insertResourceList" parameterType="com.sp.resource.Resource">
	INSERT INTO resourceList(resourceNum, groupNum, resourceName, color, occupancy) 
		VALUES(resource_seq.NEXTVAL, #{groupNum}, #{resourceName}, #{color}, #{occupancy})
</insert>

<select id="listResourceList" resultType="com.sp.resource.ResourceJSON">
	SELECT resourceNum id, rl.groupNum, groupName, resourceName title,
		color eventColor, occupancy
		FROM resourceList rl
		JOIN resourceGroup rg ON rl.groupNum = rg.groupNum
		ORDER BY rl.groupNum, resourceNum
</select>

<select id="resCount" resultType="Integer">
	SELECT NVL(COUNT(*), 0) FROM resourceList
</select>

<select id="listResourceList2" resultType="com.sp.resource.Resource">
	SELECT resourceNum, resourceName, occupancy
		FROM resourceList
		WHERE groupNum = #{groupNum}
		ORDER By resourceNum
</select>

<select id="listResourceList3" resultType="com.sp.resource.Resource">
	SELECT resourceNum, rl.groupNum, groupName, resourceName, occupancy
		FROM resourceList rl
		LEFT OUTER JOIN resourceGroup rg ON rl.groupNum = rg.groupNum
		ORDER BY resourceNum DESC
</select>

<select id="readResourceList" parameterType="Integer" resultType="com.sp.resource.Resource">
	SELECT resourceNum, groupNum, resourceName, color, occupancy 
	FROM resourceList
	WHERE resourceNum = #{resourceNum}
</select>

<delete id="deleteResourceList" parameterType="Integer">
	DELETE FROM resourceList WHERE resourceNum = #{resourceNum}
</delete>

<!-- 자원 예약 -->
<insert id="insertReserve">
	INSERT INTO reservation(reserveNum, memberNum, name, resourceNum, resourceName, startDay, endDay,
	startTime, endTime, inwon, title, content, alarm, alarmTime, alarmTitle, alarmContent, toMember) 
	VALUES(reserve_seq.NEXTVAL, #{memberNum}, #{name}, #{resourceNum}, #{resourceName},
	#{startDay}, #{endDay}, #{startTime, jdbcType=VARCHAR}, #{endTime, jdbcType=VARCHAR},
	#{inwon}, #{title}, #{content}, #{alarm}, #{alarmTime, jdbcType=VARCHAR},
	#{alarmTitle, jdbcType=VARCHAR}, #{alarmContent, jdbcType=VARCHAR}, #{toMember, jdbcType=VARCHAR})
</insert>

<select id="listReserve" parameterType="map" resultType="com.sp.resource.ResourceJSON">
	SELECT reserveNum id, groupName, rs.resourceNum resourceId, title, content,
		NVL2(startTime, startDay||'T'||startTime, startDay) "start",
		NVL2(endTime, endDay||'T'||endTime, endDay) "end",
			startDay, startTime, endDay, endTime, 
			rs.memberNum, rs.name, occupancy, rl.resourceName, rl.groupNum, inwon,
			alarm, alarmTime, alarmTitle, alarmContent, toMember
        FROM reservation rs
        JOIN resourceList rl ON rs.resourceNum = rl.resourceNum
        JOIN resourceGroup rg ON rl.groupNum = rg.groupNum
        JOIN member m ON rs.memberNum = m.memberNum
        WHERE TO_DATE(startDay, 'YYYY-MM-DD') &gt;= #{start}
           AND TO_DATE(endDay, 'YYYY-MM-DD') &lt;= #{end}
        ORDER BY groupNum, resourceId, reserveNum
</select>

<sql id="where-list">
	<if test="searchKey=='title'">
		INSTR(title, #{searchValue}) &gt; 0
	</if>
	   
	<if test="searchKey=='writer'">
		INSTR(rs.name, #{searchValue}) &gt; 0
	</if>
	   
	<if test="searchKey=='rName'">
		INSTR(rs.resourceName, #{searchValue}) &gt; 0
	</if>
</sql>

<select id="dataCount" resultType="Integer">
	SELECT NVL(COUNT(*), 0) FROM reservation rs
	JOIN member m ON m.memberNum = rs.memberNum
	<where>
		<if test="searchValue != null and searchValue != ''">
			<include refid="where-list"/>
		</if>
	</where>
</select>

<select id="listReserve2" parameterType="map" resultType="com.sp.resource.Resource">
	SELECT * FROM(
    	SELECT ROWNUM rnum, tb.* FROM(
        	SELECT reserveNum, rs.resourceNum, rs.resourceName,
        	title, startDay, endDay, rs.name, rs.created, inwon
        	FROM reservation rs
        	LEFT OUTER JOIN resourceList rl ON rl.resourceNum = rs.resourceNum
        	LEFT OUTER JOIN member m ON m.memberNum = rs.memberNum
        	<where>
				<if test="searchValue != null and searchValue != ''">
					<include refid="where-list"/>
				</if>
			</where>
    	)tb WHERE ROWNUM &lt;= #{end}
	)WHERE rnum &gt;= #{start}
</select>

<update id="updateReserve" parameterType="com.sp.resource.Resource">
	UPDATE reservation SET resourceNum = #{resourceNum}, resourceName = #{resourceName}, startDay = #{startDay},
		endDay = #{endDay}, startTime = #{startTime, jdbcType=VARCHAR}, endTime = #{endTime, jdbcType=VARCHAR},
		inwon = #{inwon}, title = #{title}, content = #{content}, alarm = #{alarm},
		alarmTime = #{alarmTime, jdbcType=VARCHAR}, alarmTitle = #{alarmTitle, jdbcType=VARCHAR},
		alarmContent = #{alarmContent, jdbcType=VARCHAR}, toMember = #{toMember, jdbcType=VARCHAR}
	WHERE reserveNum = #{reserveNum}
</update>

<delete id="deleteReserve" parameterType="map">
	DELETE FROM reservation  
		WHERE reserveNum = #{reserveNum}
		<if test="memberNum != 'admin'">
			AND memberNum = #{memberNum}
		</if>
</delete>

</mapper>