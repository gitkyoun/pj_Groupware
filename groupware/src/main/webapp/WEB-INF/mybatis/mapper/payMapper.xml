<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pay">
<!-- select -->
	<!-- 사원정보 -->
	<select id="readMember" resultType="com.sp.pay.Pay" parameterType="map">
        SELECT s.memberNum,departmentName,positionName,name,year,month,day,basicpay,
		    healthTax,employTax,accidentTax,pensionTax,incomeTax,extraPay 
		    FROM salary s 
		    JOIN member m ON s.memberNum=m.memberNum
		    JOIN position p ON m.positionNum = p.positionNum
		    JOIN department d ON m.departmentNum=d.departmentNum
		where s.memberNum=#{memberNum} and year=#{year} and month=#{month}
    </select>
	<!-- 세율정보 -->
	<select id="readTax" resultType="com.sp.pay.Tax">
		SELECT deductNum,deductName,rate FROM salary_deduction
	</select>
	
	<!-- 관리자 리스트 -->
	<select id="listPayMemberAdmin" parameterType="map" resultType="com.sp.pay.Pay">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
			     SELECT m.memberNum,departmentName,positionName,name,NVL(basicpay,0)basicpay
					FROM member m 
					JOIN department d ON m.departmentNum = d.departmentNum
					JOIN position p ON m.positionNum = p.positionNum
					LEFT OUTER JOIN basicpay b ON m.memberNum = b.memberNum
                    <where>
                         <if test="searchValue != null and searchValue != ''">
			                  <include refid="where-list"/>
		                 </if>
	                </where>
					ORDER BY m.memberNum DESC
	        ) tb WHERE ROWNUM &lt;= #{end}
	    ) WHERE rnum &gt;= #{start}
	</select>
	
	<!-- 사원 개인 리스트 -->
	<select id="listPayMember" parameterType="map" resultType="com.sp.pay.Pay">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
			     SELECT s.memberNum,year,month,day,name,NVL(basicpay,0)basicpay
					FROM salary s
                    JOIN member m ON s.memberNum=m.memberNum
                    <where>
                		<if test="searchKey != null and searchKey != 'all'">
		                	<include refid="where-paylist"/>
                		</if>
                    </where>
	                AND s.memberNum=#{memberNum}
					ORDER BY year DESC,month DESC
	        ) tb WHERE ROWNUM &lt;= #{end}
	    ) WHERE rnum &gt;= #{start}
	</select>	
	
	<!-- year 리스트 -->
	<select id="payYearList" resultType="map" parameterType="String">
		SELECT memberNum,year FROM salary where memberNum=#{memberNum} group by memberNum,year ORDER BY year DESC
	</select>
	<!-- 보혐료 세율 리스트 -->
	
	
<!-- 총 사원 카운트 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM member m 
		JOIN department d ON m.departmentNum=d.departmentNum
		JOIN position p ON m.positionNum=p.positionNum
		<where>
			<if test="searchValue != null and searchValue != ''">
				<include refid="where-list"/>
			</if>
		</where>
	</select>

	<!-- 사원 급여내역 카운트 -->
	<select id="memberdataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM salary
		 <where>
      		<if test="searchKey != null">
               	<include refid="where-paylist"/>
               	AND memberNum=#{memberNum}
       		</if>
         </where>
	</select>
	
<!-- insert -->

	<!-- 기본급 및 지급일 입력 -->
	<insert id="insertPay" parameterType="com.sp.pay.Pay">
		INSERT INTO salary(salaryNum,memberNum,year,month,day,basicpay,healthTax,employTax,accidentTax,pensionTax,incomeTax,extraPay)
            VALUES(salary_seq.NEXTVAL,#{memberNum},#{year},#{month},#{day},#{basicpay},#{healthTax},#{employTax},#{accidentTax},#{pensionTax},#{incomeTax},#{extraPay})
	</insert>


<!-- 사원조회 검색 조건 -->
	<sql id="where-list">
	  <if test="searchKey=='name'">
	      INSTR(name,#{searchValue})&gt;=1
	  </if>
	  <if test="searchKey=='position'">
	 	 INSTR(positionName,#{searchValue})&gt;=1
	  </if>
	  <if test="searchKey=='department'">
	      INSTR(departmanetName,#{searchValue})&gt;=1 
	  </if>
	</sql>

<!-- 사원 개인 검색 조건 -->
	<sql id="where-paylist">
	  <if test="searchKey=='all'">
	      INSTR(year,1)&gt;=0
	  </if>
	  <if test="searchKey==searchKey">
	  	INSTR(year,#{searchKey})&gt;=1
	  </if>
	</sql>
	
</mapper>